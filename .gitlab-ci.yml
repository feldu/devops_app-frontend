stages:
  - build
  - test

variables:
  NODE_VERSION: "18"
  NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/.npm"

default:
  image: node:$NODE_VERSION

cache:
  paths:
    - node_modules/
    - .npm

before_script:
  - npm ci --legacy-peer-deps

build:
  stage: build
  script:
    - echo Build job started
    - echo ls -l
    - ls -l
    - npm run build
    - echo ls -l build
    - ls -lR build
    - echo Build job completed
  artifacts:
    paths:
      - build/
  only:
    - lab4
  tags:
    - itmolabs

test:
  stage: test
  script:
    - echo Test job started
    - npm run test --watchAll=false
    - echo Test job completed
  only:
    - lab4
  tags:
    - itmolabs

sonarqube-check:
  stage: sonarqube-check
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'lab4'
  only:
    - lab4
  tags:
    - itmolabs

push:
  stage: push
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "cr.yandex/crp92ekqp3bdhvvp7ffm/frontend-image:${CI_COMMIT_SHORT_SHA}"
      --destination "cr.yandex/crp92ekqp3bdhvvp7ffm/frontend-image:latest"
  needs:
    [ "build" ]
  only:
    - lab4
  tags:
    - itmolabs

deploy:
  stage: deploy
  image: alpine/k8s:1.27.16
  script:
    - export K8S_BASE_URL=${K8S_BASE_URL} && export K8S_CA_DATA=${K8S_CA_DATA} && export K8S_USER_TOKEN=${K8S_USER_TOKEN}
    - kubectl rollout restart deployment frontend -n default
  needs:
    [ "push" ]
  only:
    - lab4
  tags:
    - itmolabs
